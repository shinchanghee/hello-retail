frameworkVersion: "^4.1.12"

service: hello-retail-product-catalog-builder

custom:
  stage: dev
  
  retailStreamVersion: 1
  
  # Product Catalog Versions & Exports
  # WARNING: each project that uses these will have to define the following two attributes (custom.productCatalogBuilderVersion, custom.productCatalogBuilder) in its serverless.yml:
  productCatalogBuilderVersion: 1 # The version of this service to depend upon
  # externally, use `${file(~/product-catalog/serverless.yml)}`, replacing the `~` therein with the appropriate relative reference [e.g. '..' or '../..']
  # Exports
  exportProductCategoryTableName: hello-retail-product-catalog-builder:dev:ProductCategoryTableName:1
  exportProductCategoryTableArn: hello-retail-product-catalog-builder:dev:ProductCategoryTableArn:1
  exportProductCatalogTableName: hello-retail-product-catalog-builder:dev:ProductCatalogTableName:1
  exportProductCatalogTableArn: hello-retail-product-catalog-builder:dev:ProductCatalogTableArn:1
  exportProductCatalogTableCategoryIndexArn: hello-retail-product-catalog-builder:dev:ProductCatalogTableCategoryIndexArn:1
  # 
provider:
  name: aws
  runtime: nodejs20.x
  region: ap-notheast-2
  memorySize: ${env:MEMORY_SIZE}
  stage: dev
  iam:
    role:
      statements: # permissions for all of your functions can be set here
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            - dynamodb:PutItem
          Resource: !Sub "arn:aws:dynamodb:ap-northeast-2:590183717745:table/${MetricsTablePhotoFail}"

functions:
  catalog:
    role:
      Fn::GetAtt: [ ProductCatalogBuilder, Arn ]
    handler: catalog.processKinesisEvent
    environment:
      TABLE_PRODUCT_CATEGORY_NAME:
        Ref: ProductCategory
      TABLE_PRODUCT_CATALOG_NAME:
        Ref: ProductCatalog
    events:
      - stream:
          arn: arn:aws:kinesis:ap-northeast-2:${env:ACCOUNT_ID}:stream/devRetailStream
          enabled: true
          startingPosition: TRIM_HORIZON

resources:
  Resources:
    MetricsTableProductCatalogBuilder:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: metrics.product-catalog-builder
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    # Log Group
    CatalogLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/hello-retail-product-catalog-builder-dev-catalog
        RetentionInDays: 7
    # Product Catalog Tables
    ProductCategory:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: category
            AttributeType: S
        KeySchema:
          - AttributeName: category
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: dev-ProductCategory-1
    ProductCatalog:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: category
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: dev-ProductCatalog-1
        GlobalSecondaryIndexes:
          - IndexName: Category
            KeySchema:
              - AttributeName: category
                KeyType: HASH
              - AttributeName: name
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - brand
                - description
    # Product Catalog Roles
    ProductCatalogBuilder: # role for the Catalog (Maintaining) Lambda
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: devProductCatalogBuilder1
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Principal:
                AWS: # role ARNs that are allowed to write to the Product Catalog
                  - !Sub 'arn:aws:iam::590183717745:root'
            - Effect: Allow
              Action: sts:AssumeRole
              Principal:
                Service: lambda.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSLambda_FullAccess
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        Policies:
          - PolicyName: CreateAndWriteToLogStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'logs:CreateLogStream'
                  Resource:
                    Fn::GetAtt: [ CatalogLogGroup, Arn ]
                - Effect: Allow
                  Action:
                    - 'logs:PutLogEvents'
                  Resource:
                    Fn::Join:
                      - ':'
                      - - Fn::GetAtt: [ CatalogLogGroup, Arn ]
                        - '*'
          - PolicyName: ReadFromKinesis
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'kinesis:GetRecords'
                    - 'kinesis:GetShardIterator'
                    - 'kinesis:DescribeStream'
                    - 'kinesis:ListStreams'
                  Resource:
                    Fn::ImportValue: hello-retail-stream:dev:RetailStreamArn:1
          - PolicyName: WriteToCatalog
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                -  Effect: Allow
                   Action:
                     - 'dynamodb:UpdateItem'
                   Resource:
                    Fn::Join:
                      - '/'
                      - - !Sub 'arn:aws:dynamodb:ap-northeast-2:${AWS::AccountId}:table'
                        - Ref: ProductCategory
                -  Effect: Allow
                   Action:
                     - 'dynamodb:UpdateItem'
                   Resource:
                    Fn::Join:
                      - '/'
                      - - !Sub 'arn:aws:dynamodb:ap-northeast-2:${AWS::AccountId}:table'
                        - Ref: ProductCatalog

  Outputs:
    ProductCategoryTableName:
      Description: The Name of the Product Category Table
      Value:
        Ref: ProductCategory
      Export:
        Name: hello-retail-product-catalog-builder:dev:ProductCategoryTableName:1
    ProductCategoryTableArn:
      Description: The ARN for the Product Category Table
      Value:
        Fn::Join:
          - '/'
          - - !Sub 'arn:aws:dynamodb:ap-northeast-2:590183717745:table'
            - Ref: ProductCategory
      Export:
        Name: hello-retail-product-catalog-builder:dev:ProductCategoryTableArn:1
    ProductCatalogTableName:
      Description: The Name of the Product Catalog Table
      Value:
        Ref: ProductCatalog
      Export:
        Name: hello-retail-product-catalog-builder:dev:ProductCatalogTableName:1
    ProductCatalogTableArn:
      Description: The ARN for the Product Catalog Table
      Value:
        Fn::Join:
          - '/'
          - - !Sub 'arn:aws:dynamodb:ap-northeast-2:590183717745:table'
            - Ref: ProductCatalog
      Export:
        Name: hello-retail-product-catalog-builder:dev:ProductCatalogTableArn:1
    ProductCatalogTableCategoryIndexArn:
      Description: The ARN for the Product Catalog Table's Category Index
      Value:
        Fn::Join:
          - '/'
          - - !Sub 'arn:aws:dynamodb:ap-northeast-2:590183717745:table'
            - Ref: ProductCatalog
            - index
            - Category
      Export:
        Name: hello-retail-product-catalog-builder:dev:ProductCatalogTableCategoryIndexArn:1
