frameworkVersion: "^4.1.12"

service: hello-retail-product-photos-success

custom:
  stage: dev


provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-2
  memorySize: ${env:MEMORY_SIZE}
  stage: dev
  iam:
    role:
      statements: # permissions for all of your functions can be set here
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            - dynamodb:PutItem
          Resource: !Sub "arn:aws:dynamodb:ap-northeast-2:590183717745:table/${MetricsTablePhotoSuccess}"

functions:
  success:
    role:
      'Fn::GetAtt': [ SuccessRole, Arn ]
    handler: success.handler

resources:
  Resources:
    MetricsTablePhotoSuccess:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: metrics.photo-success
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    # Log Group
    SuccessLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: '/aws/lambda/hello-retail-product-photos-success-dev-success'
        RetentionInDays: 7
    # Role
    SuccessRole: # role for the assignment succeeding lambda
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: devProductPhotosSuccess1
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Principal:
                Service: lambda.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSLambda_FullAccess
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        Policies:
          - PolicyName: CreateAndWriteToLogStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'logs:CreateLogStream'
                  Resource:
                    'Fn::GetAtt': [ SuccessLogGroup, Arn ]
                - Effect: Allow
                  Action:
                    - 'logs:PutLogEvents'
                  Resource:
                    'Fn::Join':
                      - ':'
                      - - 'Fn::GetAtt': [ SuccessLogGroup, Arn ]
                        - '*'
  Outputs:
    SuccessLambdaName:
      Description: The Name of the Photo Assignments Success Lambda
      Value:
        Ref: SuccessLambdaFunction
      Export:
        Name: hello-retail-product-photos-success:dev:PhotoAssignmentsSuccessLambdaName:1
    SuccessLambdaArn:
      Description: The Name of the Photo Assignments Success Lambda
      Value:
        'Fn::GetAtt': [ SuccessLambdaFunction, Arn ]
      Export:
        Name: hello-retail-product-photos-success:dev:PhotoAssignmentsSuccessLambdaArn:1
