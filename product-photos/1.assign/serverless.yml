frameworkVersion: "^4.1.12"

service: hello-retail-product-photos-assign

custom:
  stage: dev


provider:
  name: aws
  runtime: nodejs20.x
  region: ap-nortoeast-2
  stage: dev
  memorySize: ${env:MEMORY_SIZE}
  timeout: 65
  iam:
    role:
      statements: # permissions for all of your functions can be set here
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            - dynamodb:PutItem
          Resource: !Sub "arn:aws:dynamodb:ap-northeast-2:590183717745:table/${MetricsTablePhotoFail}"

functions:
  assign:
    role:
      'Fn::GetAtt': [ AssignRole, Arn ]
    handler: assign.handler
    environment:
      ACTIVITY_RECEIVE_ARN: arn:aws:states:ap-northeast-2:${env:ACCOUNT_ID}:activity:dev-hello-retail-product-photos-receive
      TABLE_PHOTO_ASSIGNMENTS_NAME:
        Fn::ImportValue: hello-retail-product-photos-data:dev:PhotoAssignmentsTableName:1
      TABLE_PHOTO_REGISTRATIONS_NAME:
        Fn::ImportValue: hello-retail-product-photos-data:dev:PhotoRegistrationsTableName:1

resources:
  Resources:
    MetricsTablePhotoAssign:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: metrics.photo-assign
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    # Log Group
    AssignLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: '/aws/lambda/hello-retail-product-photos-assign-dev-assign'
        RetentionInDays: 7
    # Role
    AssignRole: # role for the assignment creation lambda
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: devProductPhotosAssign1
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Principal:
                Service: lambda.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSLambda_FullAccess
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        Policies:
          - PolicyName: CreateAndWriteToLogStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'logs:CreateLogStream'
                  Resource:
                    'Fn::GetAtt': [ AssignLogGroup, Arn ]
                - Effect: Allow
                  Action:
                    - 'logs:PutLogEvents'
                  Resource:
                    'Fn::Join':
                      - ':'
                      - - 'Fn::GetAtt': [ AssignLogGroup, Arn ]
                        - '*'
          - PolicyName: GetAndFailActivityTask
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'states:GetActivityTask'
                    - 'states:SendTaskFailure'
                  Resource: arn:aws:states:ap-northeast-2:${env:ACCOUNT_ID}:activity:dev-hello-retail-product-photos-receive
          - updatePhotoAssignment:
              PolicyName: UpdatePhotoAssignment
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  -  Effect: Allow
                    Action:
                      - 'dynamodb:UpdateItem'
                    Resource:
                      'Fn::ImportValue': hello-retail-product-photos-data:dev:PhotoAssignmentsTableArn:1
          - queryPhotoRegistrationsAssignmentsIndex:
              PolicyName: QueryPhotoRegistrationsAssignmentsIndex
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  -  Effect: Allow
                    Action:
                      - 'dynamodb:Query'
                    Resource:
                      'Fn::ImportValue': hello-retail-product-photos-data:dev:PhotoRegistrationsTableAssignmentsIndexArn:1
          - updatePhotoRegistrations:
              PolicyName: UpdatePhotoRegistrations
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  -  Effect: Allow
                    Action:
                      - 'dynamodb:UpdateItem'
                    Resource:
                      'Fn::ImportValue': hello-retail-product-photos-data:dev:PhotoRegistrationsTableArn:1
  Outputs:
    AssignLambdaName:
      Description: The Name of the Photo Assignments Assign Lambda
      Value:
        Ref: AssignLambdaFunction
      Export:
        Name: hello-retail-product-photos-assign:dev:PhotoAssignmentsAssignLambdaName:1
    AssignLambdaArn:
      Description: The Name of the Photo Assignments Assign Lambda
      Value:
        'Fn::GetAtt': [ AssignLambdaFunction, Arn ]
      Export:
        Name: hello-retail-product-photos-assign:dev:PhotoAssignmentsAssignLambdaArn:1
